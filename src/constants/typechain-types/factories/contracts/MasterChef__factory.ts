/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MasterChef,
  MasterChefInterface,
} from "../../contracts/MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ManaToken",
        name: "_mana",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_manaPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "mana",
    outputs: [
      {
        internalType: "contract ManaToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manaPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingMana",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accManaPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006006553480156200001657600080fd5b50604051620021e7380380620021e783398181016040528101906200003c9190620002ac565b6200005c62000050620000f660201b60201c565b620000fe60201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160038190555080600781905550505050506200031e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f482620001c7565b9050919050565b60006200020882620001e7565b9050919050565b6200021a81620001fb565b81146200022657600080fd5b50565b6000815190506200023a816200020f565b92915050565b6200024b81620001e7565b81146200025757600080fd5b50565b6000815190506200026b8162000240565b92915050565b6000819050919050565b620002868162000271565b81146200029257600080fd5b50565b600081519050620002a6816200027b565b92915050565b60008060008060808587031215620002c957620002c8620001c2565b5b6000620002d98782880162000229565b9450506020620002ec878288016200025a565b9350506040620002ff8782880162000295565b9250506060620003128782880162000295565b91505092959194509250565b611eb9806200032e6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806364482f79116100b857806393f1a40b1161007c57806393f1a40b146102f1578063a20a1b0214610322578063bdb001a714610352578063d49e77cd14610370578063e2bbb1581461038e578063f2fde38b146103aa57610137565b806364482f7914610261578063715018a61461027d5780638d88a90e146102875780638da5cb5b146102a35780638dbb1e3a146102c157610137565b8063441a3e70116100ff578063441a3e70146101e557806348cd4cb11461020157806351eb05a61461021f5780635312ea8e1461023b578063630b5ba11461025757610137565b8063081e3eda1461013c5780631526fe271461015a57806317caf6f11461018d5780631eaaa045146101ab57806324221463146101c7575b600080fd5b6101446103c6565b60405161015191906115fa565b60405180910390f35b610174600480360381019061016f9190611646565b6103d3565b60405161018494939291906116f2565b60405180910390f35b610195610433565b6040516101a291906115fa565b60405180910390f35b6101c560048036038101906101c091906117bf565b610439565b005b6101cf61054b565b6040516101dc91906115fa565b60405180910390f35b6101ff60048036038101906101fa9190611812565b610551565b005b610209610862565b60405161021691906115fa565b60405180910390f35b61023960048036038101906102349190611646565b610868565b005b61025560048036038101906102509190611646565b610b39565b005b61025f610cd5565b005b61027b60048036038101906102769190611852565b610d08565b005b610285610da0565b005b6102a1600480360381019061029c91906118d1565b610db4565b005b6102ab610e88565b6040516102b8919061190d565b60405180910390f35b6102db60048036038101906102d69190611812565b610eb1565b6040516102e891906115fa565b60405180910390f35b61030b60048036038101906103069190611928565b610ec7565b604051610319929190611968565b60405180910390f35b61033c60048036038101906103379190611928565b610ef8565b60405161034991906115fa565b60405180910390f35b61035a6110ed565b60405161036791906119b2565b60405180910390f35b610378611113565b604051610385919061190d565b60405180910390f35b6103a860048036038101906103a39190611812565b611139565b005b6103c460048036038101906103bf91906118d1565b611413565b005b6000600480549050905090565b600481815481106103e357600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60065481565b610441611497565b80156104505761044f610cd5565b5b6000600754431161046357600754610465565b435b90508360065461047591906119fc565b600681905550600460405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b60035481565b60006004838154811061056757610566611a52565b5b9060005260206000209060040201905060006005600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015610612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060990611ade565b60405180910390fd5b61061b84610868565b6000816001015464e8d4a510008460030154846000015461063c9190611afe565b6106469190611b87565b6106509190611bb8565b9050600081111561070c57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106b8929190611bec565b602060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a9190611c2a565b505b60008411156107e0578382600001546107259190611bb8565b82600001819055508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161078c929190611bec565b602060405180830381600087803b1580156107a657600080fd5b505af11580156107ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190611c2a565b505b64e8d4a51000836003015483600001546107fa9190611afe565b6108049190611b87565b8260010181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161085391906115fa565b60405180910390a35050505050565b60075481565b60006004828154811061087e5761087d611a52565b5b906000526020600020906004020190508060020154431161089f5750610b36565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108fe919061190d565b60206040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190611c6c565b90506000811415610969574382600201819055505050610b36565b6000610979836002015443610eb1565b905060006006548460010154600354846109939190611afe565b61099d9190611afe565b6109a79190611b87565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401610a06929190611bec565b600060405180830381600087803b158015610a2057600080fd5b505af1158015610a34573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a84610aa69190611b87565b6040518363ffffffff1660e01b8152600401610ac3929190611bec565b600060405180830381600087803b158015610add57600080fd5b505af1158015610af1573d6000803e3d6000fd5b505050508264e8d4a5100082610b079190611afe565b610b119190611b87565b8460030154610b2091906119fc565b8460030181905550438460020181905550505050505b50565b600060048281548110610b4f57610b4e611a52565b5b9060005260206000209060040201905060006005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3383600001546040518363ffffffff1660e01b8152600401610c16929190611bec565b602060405180830381600087803b158015610c3057600080fd5b505af1158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190611c2a565b50823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051610cb491906115fa565b60405180910390a36000816000018190555060008160010181905550505050565b6000600480549050905060005b81811015610d0457610cf381610868565b80610cfd90611c99565b9050610ce2565b5050565b610d10611497565b8015610d1f57610d1e610cd5565b5b600060048481548110610d3557610d34611a52565b5b90600052602060002090600402016001015490508260048581548110610d5e57610d5d611a52565b5b906000526020600020906004020160010181905550828114610d9a578281600654610d899190611bb8565b610d9391906119fc565b6006819055505b50505050565b610da8611497565b610db26000611515565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3b90611d2e565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008282610ebf9190611bb8565b905092915050565b6005602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b60008060048481548110610f0f57610f0e611a52565b5b9060005260206000209060040201905060006005600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fdb919061190d565b60206040518083038186803b158015610ff357600080fd5b505afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b9190611c6c565b9050836002015443118015611041575060008114155b156110b2576000611056856002015443610eb1565b905060006006548660010154600354846110709190611afe565b61107a9190611afe565b6110849190611b87565b90508264e8d4a51000826110989190611afe565b6110a29190611b87565b846110ad91906119fc565b935050505b826001015464e8d4a510008385600001546110cd9190611afe565b6110d79190611b87565b6110e19190611bb8565b94505050505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006004838154811061114f5761114e611a52565b5b9060005260206000209060040201905060006005600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506111bc84610868565b6000816000015411156112bc576000816001015464e8d4a51000846003015484600001546111ea9190611afe565b6111f49190611b87565b6111fe9190611bb8565b905060008111156112ba57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611266929190611bec565b602060405180830381600087803b15801561128057600080fd5b505af1158015611294573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b89190611c2a565b505b505b6000831115611392578160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161132693929190611d4e565b602060405180830381600087803b15801561134057600080fd5b505af1158015611354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113789190611c2a565b5082816000015461138991906119fc565b81600001819055505b64e8d4a51000826003015482600001546113ac9190611afe565b6113b69190611b87565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161140591906115fa565b60405180910390a350505050565b61141b611497565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561148b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148290611df7565b60405180910390fd5b61149481611515565b50565b61149f6115d9565b73ffffffffffffffffffffffffffffffffffffffff166114bd610e88565b73ffffffffffffffffffffffffffffffffffffffff1614611513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a90611e63565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b6115f4816115e1565b82525050565b600060208201905061160f60008301846115eb565b92915050565b600080fd5b611623816115e1565b811461162e57600080fd5b50565b6000813590506116408161161a565b92915050565b60006020828403121561165c5761165b611615565b5b600061166a84828501611631565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116b86116b36116ae84611673565b611693565b611673565b9050919050565b60006116ca8261169d565b9050919050565b60006116dc826116bf565b9050919050565b6116ec816116d1565b82525050565b600060808201905061170760008301876116e3565b61171460208301866115eb565b61172160408301856115eb565b61172e60608301846115eb565b95945050505050565b600061174282611673565b9050919050565b600061175482611737565b9050919050565b61176481611749565b811461176f57600080fd5b50565b6000813590506117818161175b565b92915050565b60008115159050919050565b61179c81611787565b81146117a757600080fd5b50565b6000813590506117b981611793565b92915050565b6000806000606084860312156117d8576117d7611615565b5b60006117e686828701611631565b93505060206117f786828701611772565b9250506040611808868287016117aa565b9150509250925092565b6000806040838503121561182957611828611615565b5b600061183785828601611631565b925050602061184885828601611631565b9150509250929050565b60008060006060848603121561186b5761186a611615565b5b600061187986828701611631565b935050602061188a86828701611631565b925050604061189b868287016117aa565b9150509250925092565b6118ae81611737565b81146118b957600080fd5b50565b6000813590506118cb816118a5565b92915050565b6000602082840312156118e7576118e6611615565b5b60006118f5848285016118bc565b91505092915050565b61190781611737565b82525050565b600060208201905061192260008301846118fe565b92915050565b6000806040838503121561193f5761193e611615565b5b600061194d85828601611631565b925050602061195e858286016118bc565b9150509250929050565b600060408201905061197d60008301856115eb565b61198a60208301846115eb565b9392505050565b600061199c826116bf565b9050919050565b6119ac81611991565b82525050565b60006020820190506119c760008301846119a3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a07826115e1565b9150611a12836115e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a4757611a466119cd565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b6000611ac8601283611a81565b9150611ad382611a92565b602082019050919050565b60006020820190508181036000830152611af781611abb565b9050919050565b6000611b09826115e1565b9150611b14836115e1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b4d57611b4c6119cd565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b92826115e1565b9150611b9d836115e1565b925082611bad57611bac611b58565b5b828204905092915050565b6000611bc3826115e1565b9150611bce836115e1565b925082821015611be157611be06119cd565b5b828203905092915050565b6000604082019050611c0160008301856118fe565b611c0e60208301846115eb565b9392505050565b600081519050611c2481611793565b92915050565b600060208284031215611c4057611c3f611615565b5b6000611c4e84828501611c15565b91505092915050565b600081519050611c668161161a565b92915050565b600060208284031215611c8257611c81611615565b5b6000611c9084828501611c57565b91505092915050565b6000611ca4826115e1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cd757611cd66119cd565b5b600182019050919050565b7f6465763a20776861743f00000000000000000000000000000000000000000000600082015250565b6000611d18600a83611a81565b9150611d2382611ce2565b602082019050919050565b60006020820190508181036000830152611d4781611d0b565b9050919050565b6000606082019050611d6360008301866118fe565b611d7060208301856118fe565b611d7d60408301846115eb565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611de1602683611a81565b9150611dec82611d85565b604082019050919050565b60006020820190508181036000830152611e1081611dd4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e4d602083611a81565b9150611e5882611e17565b602082019050919050565b60006020820190508181036000830152611e7c81611e40565b905091905056fea26469706673582212207d0e51e1054f4dc61e39a7594005192740a1c0d760a0ff89cc846dc5ade36d4264736f6c63430008090033";

type MasterChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterChef__factory extends ContractFactory {
  constructor(...args: MasterChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mana: PromiseOrValue<string>,
    _devaddr: PromiseOrValue<string>,
    _manaPerBlock: PromiseOrValue<BigNumberish>,
    _startBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _mana,
      _devaddr,
      _manaPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  override getDeployTransaction(
    _mana: PromiseOrValue<string>,
    _devaddr: PromiseOrValue<string>,
    _manaPerBlock: PromiseOrValue<BigNumberish>,
    _startBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mana,
      _devaddr,
      _manaPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  override attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  override connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
